name: ci/cd
on:
  push:
    paths:
      - 'app/**'
      - 'config/**'
  pull_request:
  workflow_dispatch:


jobs:
  build:
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12.10
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 1337:5432
      zookeeper:
        image: docker.io/bitnami/zookeeper:latest
        ports:
          - 2181:2181
        env:
          ALLOW_ANONYMOUS_LOGIN: yes
        options: >-
          --health-cmd "echo mntr | nc -w 2 -q 2 localhost 2181"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      kafka:
        image: docker.io/bitnami/kafka:latest
        ports:
          - 9092:9092
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
          KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
          ALLOW_PLAINTEXT_LISTENER: yes

    steps:
      - uses: actions/checkout@v3

      - run: PGPASSWORD=postgres psql -U postgres -h localhost -p 1337 -f ./local-db-init.sql

      - uses: actions/setup-java@v3
        with:
          java-version: '17.x'
          distribution: temurin
          cache: maven

      - run: mvn -B package
        working-directory: app
        env:
          MAVEN_OPTS: -Dkotlin.daemon.jvm.options=-Xmx6g

      - uses: nais/docker-build-push@v0
        id: gar-push
        with:
          team: fager
          tag: ${{ github.sha }}
          dockerfile: app/Dockerfile
          docker_context: app
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}

  deploy:
    permissions:
      contents: "read"
      id-token: "write"
    needs: [build]
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    strategy:
      matrix:
        cluster:
          - dev-gcp
          - prod-gcp
        app:
          - bruker-api
          - bruker-api-writer
          - produsent-api
          - kafka-reaper
          - statistikk
          - ekstern-varsling
          - replay-validator
          - kafka-backup
          - skedulert-utgaatt
          - skedulert-harddelete
          - dataprodukt
    steps:
      - uses: actions/checkout@v3
      - uses: nais/login@v0
        id: login
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: fager
      - uses: nais/deploy/actions/deploy@v1
        name: "${{ matrix.cluster }}: deploy ${{ matrix.app }}"
        env:
          IMAGE: ${{ steps.login.outputs.registry }}/arbeidsgiver-notifikasjon-produsent-api:${{ github.sha }}
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: ${{ matrix.cluster }}
          RESOURCE: config/${{ matrix.cluster }}-${{ matrix.app }}.yaml