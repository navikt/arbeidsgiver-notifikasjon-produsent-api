name: ci/cd
on:
  push:
  workflow_dispatch:


jobs:
  cicd:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v1

      - run: PGPASSWORD=postgres psql -U postgres -h localhost -p 5432 -f ./local-db-init.sql

      - uses: actions/setup-java@v1
        with:
          java-version: '15.x'

      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - run: mvn -B package
        working-directory: app

      - name: Build container image
        uses: docker/build-push-action@v1
        with:
          path: app
          username: ${{ secrets.GHCR_PUSH_USERNAME }}
          password: ${{ secrets.GHCR_PUSH_TOKEN }}
          registry: ghcr.io
          repository: ${{ github.repository }}
          tags: ${{ github.sha }}

  deploy:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        cluster: [ dev-gcp, prod-gcp ]
        app: [ bruker-api, produsent-api, kafka-reaper ]
    steps:
          - uses: nais/deploy/actions/deploy@v1
            name: "${{ matrix.cluster }}: deploy ${{ matrix.app }}"
            if: github.ref == 'refs/heads/main'
            env:
              IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}
              APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
              CLUSTER: ${{ matrix.cluster }}
              RESOURCE: config/${{ matrix.cluster }}-${{ matrix.app }}.yaml

#      - uses: nais/deploy/actions/deploy@v1
#        name: "dev: deploy bruker-api"
#        if: github.ref == 'refs/heads/main'
#        env:
#          IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: dev-gcp
#          RESOURCE: config/dev-gcp-bruker-api.yaml
#
#      - uses: nais/deploy/actions/deploy@v1
#        name: "dev: deploy produsent-api"
#        if: github.ref == 'refs/heads/main'
#        env:
#          IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: dev-gcp
#          RESOURCE: config/dev-gcp-produsent-api.yaml
#
#      - uses: nais/deploy/actions/deploy@v1
#        name: "dev: deploy kafka reaper"
#        if: github.ref == 'refs/heads/main'
#        env:
#          IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: dev-gcp
#          RESOURCE: config/dev-gcp-kafka-reaper.yaml
#
#      - uses: nais/deploy/actions/deploy@v1
#        name: "prod: deploy bruker-api"
#        if: github.ref == 'refs/heads/main'
#        env:
#          IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: prod-gcp
#          RESOURCE: config/prod-gcp-bruker-api.yaml
#
#      - uses: nais/deploy/actions/deploy@v1
#        name: "prod: deploy produsent-api"
#        if: github.ref == 'refs/heads/main'
#        env:
#          IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: prod-gcp
#          RESOURCE: config/prod-gcp-produsent-api.yaml
#
#      - uses: nais/deploy/actions/deploy@v1
#        name: "prod: deploy kafka reaper"
#        if: github.ref == 'refs/heads/main'
#        env:
#          IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: prod-gcp
#          RESOURCE: config/prod-gcp-kafka-reaper.yaml
