name: ci/cd
on:
  push:
    paths:
      - 'app/**'
      - 'config/**'
  pull_request:
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12.10
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2

      - run: PGPASSWORD=postgres psql -U postgres -h localhost -p 5432 -f ./local-db-init.sql

      - uses: actions/setup-java@v1
        with:
          java-version: '17.x'

      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - run: mvn -B package
        working-directory: app

      - name: Add coverage to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.2
        if: github.event_name == 'pull_request'
        with:
          paths: ${{ github.workspace }}/app/target/site/jacoco/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 0
          min-coverage-changed-files: 0
          title: ":space_invader: jacococo go nogo :space_invader:"

      - name: Login to GitHub Package Repository
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v2
        with:
          context: app
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/arbeidsgiver-notifikasjon-produsent-api:${{ github.sha }}
            ghcr.io/${{ github.repository }}/arbeidsgiver-notifikasjon-produsent-api:latest
          cache-from: type=registry,ref=${{ github.repository }}/arbeidsgiver-notifikasjon-produsent-api:latest
          cache-to: type=inline

  deploy:
    needs: [build]
    runs-on: ubuntu-20.04
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        cluster: [ dev-gcp, prod-gcp ]
        app: [ bruker-api, produsent-api, kafka-reaper, statistikk, ekstern-varsling, replay-validator, autoslett, kafka-backup ]
        exclude:
          - cluster: prod-gcp
            app: autoslett
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        name: "${{ matrix.cluster }}: deploy ${{ matrix.app }}"
        env:
          IMAGE: ghcr.io/${{ github.repository }}/arbeidsgiver-notifikasjon-produsent-api:${{ github.sha }}
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: ${{ matrix.cluster }}
          RESOURCE: config/${{ matrix.cluster }}-${{ matrix.app }}.yaml